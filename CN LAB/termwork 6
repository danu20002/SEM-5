#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#define MAX_PACKET_SIZE 100  // maximum size of a packet
#define BUCKET_SIZE 1000     // size of the bucket
#define OUTPUT_RATE 100      // output rate of the bucket

void delay(int);

int main() {
    int incoming_packet_size, outgoing_packet_size;
    int bucket_size = BUCKET_SIZE, output_rate = OUTPUT_RATE;
    int i = 0, time = 0;

    while (1) {
        incoming_packet_size = rand() % MAX_PACKET_SIZE;

        printf("\nIncoming packet size: %d\n", incoming_packet_size);

        if (incoming_packet_size > bucket_size) {
            printf("Bucket overflow\n");
        } else {
            delay(i);
            while (incoming_packet_size > output_rate) {
                printf("Packet of size %d sent\n", output_rate);
                incoming_packet_size -= output_rate;
                bucket_size -= output_rate;
                delay(i);
                time++;
            }

            if (incoming_packet_size > 0) {
                printf("Last packet of size %d sent\n", incoming_packet_size);
                time += incoming_packet_size / output_rate + 1;
                delay(i);
            }

            printf("Bucket size after sending: %d\n", bucket_size);
        }

        i++;
        if (i == 5) { // only run for 5 packets
            break;
        }
    }

    printf("\nTotal time taken to transmit 5 packets: %d\n", time);

    return 0;
}

void delay(int i) {
    int j;
    for (j = 0; j < 500000000; j++) {
        // delay function to simulate the transmission delay
    }
}
